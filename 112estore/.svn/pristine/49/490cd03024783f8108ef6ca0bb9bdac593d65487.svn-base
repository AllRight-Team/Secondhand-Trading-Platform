package com.estore.dao.impl;

import java.sql.SQLException;
import java.util.List;

import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.handlers.BeanHandler;
import org.apache.commons.dbutils.handlers.BeanListHandler;

import com.estore.dao.ProductDao;
import com.estore.domain.Product;
import com.estore.utils.C3P0Util;

public class ProductDaoImpl implements ProductDao {

	public int saveProduct(Product product) {
		try {
			QueryRunner qr = new QueryRunner(C3P0Util.getDataSource());
			String sql = "insert into product(pid,pname,estoreprice,markprice,pnum,cid,imgurl,description) values(?,?,?,?,?,?,?,?)";
			int update = qr.update(sql, product.getPid(), product.getPname(), product.getEstoreprice(), product.getMarkprice(),
					product.getPnum(), product.getCid(), product.getImgurl(), product.getDescription());
			return update;
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}

	public int deleteProduct(Product product) {
		try {
			QueryRunner qr = new QueryRunner(C3P0Util.getDataSource());
			String sql = "delete from product where pid=?";
			int update = qr.update(sql, product.getPid());
			return update;
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}

	public int updateProduct(Product product) {
		try {
			QueryRunner qr = new QueryRunner(C3P0Util.getDataSource());
			String sql = "update product set pname=?,estoreprice=?,markprice=?,pnum=?,cid=?,imgurl=?,description=? where pid=?";
			int update = qr.update(sql, product.getPname(), product.getEstoreprice(), product.getMarkprice(),
					product.getPnum(), product.getCid(), product.getImgurl(), product.getDescription(), product.getPid());
			return update;
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}

	public Product findProductByPnameOrPid(String pname, String pid) {
		try {
			QueryRunner qr = new QueryRunner(C3P0Util.getDataSource());
			String sql = "select * from product where pname=? or pid=?";
			Product product = qr.query(sql, new BeanHandler<Product>(Product.class), pname, pid);
			if(product != null){
				return product;
			}
			return null;
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}

	public List<Product> findAllProduct() {
		try {
			QueryRunner qr = new QueryRunner(C3P0Util.getDataSource());
			String sql = "select * from product";
			List<Product> product = qr.query(sql, new BeanListHandler<Product>(Product.class));
			return product;
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}

}
